### 파이썬의 기초에 대해 알아보자.

print(5)
print(-5)
print(3.14) #부동소수형
print(1000) #정수형
print(5+3) #사칙연산자 처리 가능
print(2*3)
print(3*(3+1)) # 연산순서 처리 가능
print('풍선') # 문자열 처리 가능, 작은 따옴표 큰 따움표 모두 사용해도 문자열 인식이 가능
print("나비")
print("z")
print("z"*9) # 문자열을 직관적으로 숫자처럼 연산처리가 가능, 다음과 같은 경우 문자열 9번을 연달아서 처리하게 된다.
print(5>10)
# 샵으로 주석을 달아줄 수 있다.
print(5<10)
print(True)
print(False)
# 파이썬의 부울 값은 대문자로 시작한다.

print(not True)
print(not False)
print(not (5<10)) 
# 파이썬은 not 키워드를 통해서 ! 반대되는 부울 값에 대한 연산처리를 유도할 수 있다.

# 다음과 같다.
# 애완동물을 소개해 주세요

animal = "강아지"
name  = "연탄이"
age = 4
hobby = "산책"
is_Adult = age >= 3
# 위에는 변수를 선언해준 것들이다. 별도로 앞에 키워드는 안 붙은 상태이다.
# 아래에서는 변수의 보간법을 알 수 있다.

print("우리집 " + animal + " 이름은" + name + "에요")
print("연탄이는" + str(age) + "살이고, 산책을 정말 좋아합니다.")
print("연탄이는 어른일까요?" + str(True))

animal = "고양이"
# 다음과 같이 해주면 변수에 새로운 값을 할당해줄 수 있다.

'''
이렇게 해주면 여러문장 주석이 가능하다.
이렇게 엔터해서도 주석처리가 가능해집니다!!
control + /해주면 일괄 주석처리가 가능하다.(스위프트랑 비슷해))
'''

print("우리집 " + animal + " 이름은" + name + "에요")
print("연탄이는", age, "살이고, 산책을 정말 좋아합니다.")
print("연탄이는 어른일까요?", True)
# 별도의 보간 문법을 처리하지 않고 직관적인 변수 처리를 통해서 원하는 출력이 바로바로 가능하다.
# 다음과 같이 쉼표를 통해서 별도로 문자열 변환을 시도하지 않고도 보간법이 가능하다.
